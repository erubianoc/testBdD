extends ./layout/index

block contenido 
    h1=pagina
    main.container.mt-5
        .row.tusdatos
            if (errores)
                each error  in errores
                    .alert.col.alert-danger.text-center=error.mensaje
            
            if (dato)
                each dat in dato.accounts
                    .col-md-6.col-lg-4.mb-4
                        .card
                            svg.icon.icon-tabler.icon-tabler-building-bank(xmlns='http://www.w3.org/2000/svg' width='44' height='44' viewbox='0 0 24 24' stroke-width='1.5' stroke='#2c3e50' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                path(stroke='none' d='M0 0h24v24H0z' fill='none')
                                line(x1='3' y1='21' x2='21' y2='21')
                                line(x1='3' y1='10' x2='21' y2='10')
                                polyline(points='5 6 12 3 19 6')
                                line(x1='4' y1='10' x2='4' y2='21')
                                line(x1='20' y1='10' x2='20' y2='21')
                                line(x1='8' y1='14' x2='8' y2='17')
                                line(x1='12' y1='14' x2='12' y2='17')
                                line(x1='16' y1='14' x2='16' y2='17')

                            .card-body
                                h4=dat.name
                                p   
                                    svg.icon.icon-tabler.icon-tabler-businessplan(xmlns='http://www.w3.org/2000/svg' width='44' height='44' viewbox='0 0 24 24' stroke-width='1.5' stroke='#2c3e50' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                        path(stroke='none' d='M0 0h24v24H0z' fill='none')
                                        ellipse(cx='16' cy='6' rx='5' ry='3')
                                        path(d='M11 6v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4')
                                        path(d='M11 10v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4')
                                        path(d='M11 14v4c0 1.657 2.239 3 5 3s5 -1.343 5 -3v-4')
                                        path(d='M7 9h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3h-2.5')
                                        path(d='M5 15v1m0 -8v1')
                                    |Number: #{dat.number} , Moneda: #{dat.currency}  
                                p 
                                    svg.icon.icon-tabler.icon-tabler-wallet(xmlns='http://www.w3.org/2000/svg' width='44' height='44' viewbox='0 0 24 24' stroke-width='1.5' stroke='#2c3e50' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                        path(stroke='none' d='M0 0h24v24H0z' fill='none')
                                        path(d='M17 8v-3a1 1 0 0 0 -1 -1h-10a2 2 0 0 0 0 4h12a1 1 0 0 1 1 1v3m0 4v3a1 1 0 0 1 -1 1h-12a2 2 0 0 1 -2 -2v-12')
                                        path(d='M20 12v4h-4a2 2 0 0 1 0 -4h4')
                                    |Balance:#{dat.balance}
                                p   Movimientos
                                    a(href='/Movimientos', class="btn btn-succes btn-block") Detalle
        .row.imgbar
            p=JSON.stringify(data1)
            canvas#myChart(width='100' height='100')
                script.
                    var ctx = document.getElementById('myChart').getContext('2d');
                    var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                    labels: ["cop" , "pap"]],
                    datasets: [{
                    label: 'BALANCE DE TUS CUENTAS',
                    data: ['123','1222'],
                    backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',

                    ],
                    borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',

                    ],
                    borderWidth: 1
                    }]
                    },
                    options: {
                    scales: {
                    y: {
                    beginAtZero: true
                    }
                    }
                    }
                    })
               
                                


                                            
            